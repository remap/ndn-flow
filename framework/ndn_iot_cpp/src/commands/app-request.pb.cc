// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app-request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "app-request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* AppRequestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequestMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppRequestMessage_Name_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequestMessage_Name_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppRequestMessage_AppRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppRequestMessage_AppRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_app_2drequest_2eproto() {
  protobuf_AddDesc_app_2drequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "app-request.proto");
  GOOGLE_CHECK(file != NULL);
  AppRequestMessage_descriptor_ = file->message_type(0);
  static const int AppRequestMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage, command_),
  };
  AppRequestMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequestMessage_descriptor_,
      AppRequestMessage::default_instance_,
      AppRequestMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequestMessage));
  AppRequestMessage_Name_descriptor_ = AppRequestMessage_descriptor_->nested_type(0);
  static const int AppRequestMessage_Name_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage_Name, components_),
  };
  AppRequestMessage_Name_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequestMessage_Name_descriptor_,
      AppRequestMessage_Name::default_instance_,
      AppRequestMessage_Name_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage_Name, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage_Name, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequestMessage_Name));
  AppRequestMessage_AppRequest_descriptor_ = AppRequestMessage_descriptor_->nested_type(1);
  static const int AppRequestMessage_AppRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage_AppRequest, idname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage_AppRequest, dataprefix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage_AppRequest, appname_),
  };
  AppRequestMessage_AppRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppRequestMessage_AppRequest_descriptor_,
      AppRequestMessage_AppRequest::default_instance_,
      AppRequestMessage_AppRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage_AppRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppRequestMessage_AppRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppRequestMessage_AppRequest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_app_2drequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequestMessage_descriptor_, &AppRequestMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequestMessage_Name_descriptor_, &AppRequestMessage_Name::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppRequestMessage_AppRequest_descriptor_, &AppRequestMessage_AppRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_app_2drequest_2eproto() {
  delete AppRequestMessage::default_instance_;
  delete AppRequestMessage_reflection_;
  delete AppRequestMessage_Name::default_instance_;
  delete AppRequestMessage_Name_reflection_;
  delete AppRequestMessage_AppRequest::default_instance_;
  delete AppRequestMessage_AppRequest_reflection_;
}

void protobuf_AddDesc_app_2drequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021app-request.proto\"\330\001\n\021AppRequestMessag"
    "e\022/\n\007command\030\337\001 \002(\0132\035.AppRequestMessage."
    "AppRequest\032\032\n\004Name\022\022\n\ncomponents\030\010 \003(\014\032v"
    "\n\nAppRequest\022(\n\006idName\030\334\001 \002(\0132\027.AppReque"
    "stMessage.Name\022,\n\ndataPrefix\030\335\001 \002(\0132\027.Ap"
    "pRequestMessage.Name\022\020\n\007appName\030\336\001 \002(\t", 238);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "app-request.proto", &protobuf_RegisterTypes);
  AppRequestMessage::default_instance_ = new AppRequestMessage();
  AppRequestMessage_Name::default_instance_ = new AppRequestMessage_Name();
  AppRequestMessage_AppRequest::default_instance_ = new AppRequestMessage_AppRequest();
  AppRequestMessage::default_instance_->InitAsDefaultInstance();
  AppRequestMessage_Name::default_instance_->InitAsDefaultInstance();
  AppRequestMessage_AppRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_app_2drequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_app_2drequest_2eproto {
  StaticDescriptorInitializer_app_2drequest_2eproto() {
    protobuf_AddDesc_app_2drequest_2eproto();
  }
} static_descriptor_initializer_app_2drequest_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AppRequestMessage_Name::kComponentsFieldNumber;
#endif  // !_MSC_VER

AppRequestMessage_Name::AppRequestMessage_Name()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppRequestMessage.Name)
}

void AppRequestMessage_Name::InitAsDefaultInstance() {
}

AppRequestMessage_Name::AppRequestMessage_Name(const AppRequestMessage_Name& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AppRequestMessage.Name)
}

void AppRequestMessage_Name::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequestMessage_Name::~AppRequestMessage_Name() {
  // @@protoc_insertion_point(destructor:AppRequestMessage.Name)
  SharedDtor();
}

void AppRequestMessage_Name::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AppRequestMessage_Name::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequestMessage_Name::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequestMessage_Name_descriptor_;
}

const AppRequestMessage_Name& AppRequestMessage_Name::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2drequest_2eproto();
  return *default_instance_;
}

AppRequestMessage_Name* AppRequestMessage_Name::default_instance_ = NULL;

AppRequestMessage_Name* AppRequestMessage_Name::New() const {
  return new AppRequestMessage_Name;
}

void AppRequestMessage_Name::Clear() {
  components_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequestMessage_Name::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AppRequestMessage.Name)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes components = 8;
      case 8: {
        if (tag == 66) {
         parse_components:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_components()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_components;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AppRequestMessage.Name)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AppRequestMessage.Name)
  return false;
#undef DO_
}

void AppRequestMessage_Name::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AppRequestMessage.Name)
  // repeated bytes components = 8;
  for (int i = 0; i < this->components_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->components(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AppRequestMessage.Name)
}

::google::protobuf::uint8* AppRequestMessage_Name::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AppRequestMessage.Name)
  // repeated bytes components = 8;
  for (int i = 0; i < this->components_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->components(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppRequestMessage.Name)
  return target;
}

int AppRequestMessage_Name::ByteSize() const {
  int total_size = 0;

  // repeated bytes components = 8;
  total_size += 1 * this->components_size();
  for (int i = 0; i < this->components_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->components(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequestMessage_Name::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequestMessage_Name* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequestMessage_Name*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequestMessage_Name::MergeFrom(const AppRequestMessage_Name& from) {
  GOOGLE_CHECK_NE(&from, this);
  components_.MergeFrom(from.components_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequestMessage_Name::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequestMessage_Name::CopyFrom(const AppRequestMessage_Name& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequestMessage_Name::IsInitialized() const {

  return true;
}

void AppRequestMessage_Name::Swap(AppRequestMessage_Name* other) {
  if (other != this) {
    components_.Swap(&other->components_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequestMessage_Name::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequestMessage_Name_descriptor_;
  metadata.reflection = AppRequestMessage_Name_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AppRequestMessage_AppRequest::kIdNameFieldNumber;
const int AppRequestMessage_AppRequest::kDataPrefixFieldNumber;
const int AppRequestMessage_AppRequest::kAppNameFieldNumber;
#endif  // !_MSC_VER

AppRequestMessage_AppRequest::AppRequestMessage_AppRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppRequestMessage.AppRequest)
}

void AppRequestMessage_AppRequest::InitAsDefaultInstance() {
  idname_ = const_cast< ::AppRequestMessage_Name*>(&::AppRequestMessage_Name::default_instance());
  dataprefix_ = const_cast< ::AppRequestMessage_Name*>(&::AppRequestMessage_Name::default_instance());
}

AppRequestMessage_AppRequest::AppRequestMessage_AppRequest(const AppRequestMessage_AppRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AppRequestMessage.AppRequest)
}

void AppRequestMessage_AppRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  idname_ = NULL;
  dataprefix_ = NULL;
  appname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequestMessage_AppRequest::~AppRequestMessage_AppRequest() {
  // @@protoc_insertion_point(destructor:AppRequestMessage.AppRequest)
  SharedDtor();
}

void AppRequestMessage_AppRequest::SharedDtor() {
  if (appname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appname_;
  }
  if (this != default_instance_) {
    delete idname_;
    delete dataprefix_;
  }
}

void AppRequestMessage_AppRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequestMessage_AppRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequestMessage_AppRequest_descriptor_;
}

const AppRequestMessage_AppRequest& AppRequestMessage_AppRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2drequest_2eproto();
  return *default_instance_;
}

AppRequestMessage_AppRequest* AppRequestMessage_AppRequest::default_instance_ = NULL;

AppRequestMessage_AppRequest* AppRequestMessage_AppRequest::New() const {
  return new AppRequestMessage_AppRequest;
}

void AppRequestMessage_AppRequest::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_idname()) {
      if (idname_ != NULL) idname_->::AppRequestMessage_Name::Clear();
    }
    if (has_dataprefix()) {
      if (dataprefix_ != NULL) dataprefix_->::AppRequestMessage_Name::Clear();
    }
    if (has_appname()) {
      if (appname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        appname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequestMessage_AppRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AppRequestMessage.AppRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AppRequestMessage.Name idName = 220;
      case 220: {
        if (tag == 1762) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1770)) goto parse_dataPrefix;
        break;
      }

      // required .AppRequestMessage.Name dataPrefix = 221;
      case 221: {
        if (tag == 1770) {
         parse_dataPrefix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dataprefix()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1778)) goto parse_appName;
        break;
      }

      // required string appName = 222;
      case 222: {
        if (tag == 1778) {
         parse_appName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "appname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AppRequestMessage.AppRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AppRequestMessage.AppRequest)
  return false;
#undef DO_
}

void AppRequestMessage_AppRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AppRequestMessage.AppRequest)
  // required .AppRequestMessage.Name idName = 220;
  if (has_idname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220, this->idname(), output);
  }

  // required .AppRequestMessage.Name dataPrefix = 221;
  if (has_dataprefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      221, this->dataprefix(), output);
  }

  // required string appName = 222;
  if (has_appname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      222, this->appname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AppRequestMessage.AppRequest)
}

::google::protobuf::uint8* AppRequestMessage_AppRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AppRequestMessage.AppRequest)
  // required .AppRequestMessage.Name idName = 220;
  if (has_idname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        220, this->idname(), target);
  }

  // required .AppRequestMessage.Name dataPrefix = 221;
  if (has_dataprefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        221, this->dataprefix(), target);
  }

  // required string appName = 222;
  if (has_appname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "appname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        222, this->appname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppRequestMessage.AppRequest)
  return target;
}

int AppRequestMessage_AppRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AppRequestMessage.Name idName = 220;
    if (has_idname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->idname());
    }

    // required .AppRequestMessage.Name dataPrefix = 221;
    if (has_dataprefix()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dataprefix());
    }

    // required string appName = 222;
    if (has_appname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequestMessage_AppRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequestMessage_AppRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequestMessage_AppRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequestMessage_AppRequest::MergeFrom(const AppRequestMessage_AppRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idname()) {
      mutable_idname()->::AppRequestMessage_Name::MergeFrom(from.idname());
    }
    if (from.has_dataprefix()) {
      mutable_dataprefix()->::AppRequestMessage_Name::MergeFrom(from.dataprefix());
    }
    if (from.has_appname()) {
      set_appname(from.appname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequestMessage_AppRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequestMessage_AppRequest::CopyFrom(const AppRequestMessage_AppRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequestMessage_AppRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AppRequestMessage_AppRequest::Swap(AppRequestMessage_AppRequest* other) {
  if (other != this) {
    std::swap(idname_, other->idname_);
    std::swap(dataprefix_, other->dataprefix_);
    std::swap(appname_, other->appname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequestMessage_AppRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequestMessage_AppRequest_descriptor_;
  metadata.reflection = AppRequestMessage_AppRequest_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AppRequestMessage::kCommandFieldNumber;
#endif  // !_MSC_VER

AppRequestMessage::AppRequestMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppRequestMessage)
}

void AppRequestMessage::InitAsDefaultInstance() {
  command_ = const_cast< ::AppRequestMessage_AppRequest*>(&::AppRequestMessage_AppRequest::default_instance());
}

AppRequestMessage::AppRequestMessage(const AppRequestMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AppRequestMessage)
}

void AppRequestMessage::SharedCtor() {
  _cached_size_ = 0;
  command_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppRequestMessage::~AppRequestMessage() {
  // @@protoc_insertion_point(destructor:AppRequestMessage)
  SharedDtor();
}

void AppRequestMessage::SharedDtor() {
  if (this != default_instance_) {
    delete command_;
  }
}

void AppRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppRequestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppRequestMessage_descriptor_;
}

const AppRequestMessage& AppRequestMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_app_2drequest_2eproto();
  return *default_instance_;
}

AppRequestMessage* AppRequestMessage::default_instance_ = NULL;

AppRequestMessage* AppRequestMessage::New() const {
  return new AppRequestMessage;
}

void AppRequestMessage::Clear() {
  if (has_command()) {
    if (command_ != NULL) command_->::AppRequestMessage_AppRequest::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AppRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AppRequestMessage.AppRequest command = 223;
      case 223: {
        if (tag == 1786) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AppRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AppRequestMessage)
  return false;
#undef DO_
}

void AppRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AppRequestMessage)
  // required .AppRequestMessage.AppRequest command = 223;
  if (has_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      223, this->command(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AppRequestMessage)
}

::google::protobuf::uint8* AppRequestMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AppRequestMessage)
  // required .AppRequestMessage.AppRequest command = 223;
  if (has_command()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        223, this->command(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppRequestMessage)
  return target;
}

int AppRequestMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AppRequestMessage.AppRequest command = 223;
    if (has_command()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->command());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppRequestMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppRequestMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppRequestMessage::MergeFrom(const AppRequestMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command()) {
      mutable_command()->::AppRequestMessage_AppRequest::MergeFrom(from.command());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppRequestMessage::CopyFrom(const AppRequestMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppRequestMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_command()) {
    if (!this->command().IsInitialized()) return false;
  }
  return true;
}

void AppRequestMessage::Swap(AppRequestMessage* other) {
  if (other != this) {
    std::swap(command_, other->command_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppRequestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppRequestMessage_descriptor_;
  metadata.reflection = AppRequestMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
